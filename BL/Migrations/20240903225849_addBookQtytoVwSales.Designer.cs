// <auto-generated />
using System;
using BookStore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BL.Migrations
{
    [DbContext(typeof(BookStoreContext))]
    [Migration("20240903225849_addBookQtytoVwSales")]
    partial class addBookQtytoVwSales
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookStore.Models.TbAuthor", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<string>("AuthorInfo")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CurrentState")
                        .HasColumnType("int");

                    b.HasKey("AuthorId");

                    b.ToTable("TbAuthor", (string)null);
                });

            modelBuilder.Entity("BookStore.Models.TbBook", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CurrentState")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfPages")
                        .HasColumnType("int");

                    b.Property<int>("PublishId")
                        .HasColumnType("int");

                    b.Property<string>("PublishYear")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<decimal>("SalesPrice")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DiscountId");

                    b.HasIndex("PublishId");

                    b.HasIndex(new[] { "Isbn" }, "UK_Isbn_TbBooks")
                        .IsUnique();

                    b.ToTable("TbBooks");
                });

            modelBuilder.Entity("BookStore.Models.TbCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CurrentState")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowInHomePage")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("CategoryId");

                    b.ToTable("TbCategories");
                });

            modelBuilder.Entity("BookStore.Models.TbCustomerDeliverInfo", b =>
                {
                    b.Property<int>("CustomerDeliverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerDeliverId"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CutomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("GovernorateId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("CustomerDeliverId");

                    b.HasIndex("GovernorateId");

                    b.ToTable("TbCustomerDeliverInfo", (string)null);
                });

            modelBuilder.Entity("BookStore.Models.TbDeliveryMan", b =>
                {
                    b.Property<int>("DeliveryManId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryManId"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<int>("CurrentState")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryManName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("DeliveryManId");

                    b.ToTable("TbDeliveryMan", (string)null);
                });

            modelBuilder.Entity("BookStore.Models.TbDiscount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"));

                    b.Property<int>("DiscountPercent")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime");

                    b.HasKey("DiscountId");

                    b.ToTable("TbDiscount", (string)null);
                });

            modelBuilder.Entity("BookStore.Models.TbGovernorate", b =>
                {
                    b.Property<int>("GovernorateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GovernorateId"));

                    b.Property<int>("CurrentState")
                        .HasColumnType("int");

                    b.Property<decimal>("DeliveryPrice")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<string>("GovernorateName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GovernorateId");

                    b.ToTable("TbGovernorates");
                });

            modelBuilder.Entity("BookStore.Models.TbPublish", b =>
                {
                    b.Property<int>("PublishId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PublishId"));

                    b.Property<int>("CurrentState")
                        .HasColumnType("int");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("Unknown");

                    b.HasKey("PublishId");

                    b.ToTable("TbPublish", (string)null);
                });

            modelBuilder.Entity("BookStore.Models.TbPurchaseInvoice", b =>
                {
                    b.Property<int>("PurchaseInvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseInvoiceId"));

                    b.Property<int>("CurrentState")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("PurchaseInvoiceId");

                    b.HasIndex("SupplierId");

                    b.ToTable("TbPurchaseInvoice", (string)null);
                });

            modelBuilder.Entity("BookStore.Models.TbPurchaseInvoiceBook", b =>
                {
                    b.Property<int>("InvoiceBookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceBookId"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("InvoiceBookId");

                    b.HasIndex("BookId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("TbPurchaseInvoiceBook", (string)null);
                });

            modelBuilder.Entity("BookStore.Models.TbSalesInvoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CurrentState")
                        .HasColumnType("int");

                    b.Property<int>("CustomerDeliverId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeliveryManId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryState")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("InvoiceDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("InvoiceId");

                    b.HasIndex("CustomerDeliverId");

                    b.HasIndex("DeliveryManId");

                    b.ToTable("TbSalesInvoice", (string)null);
                });

            modelBuilder.Entity("BookStore.Models.TbSalesInvoiceBook", b =>
                {
                    b.Property<int>("InvoiceBookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceBookId"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("InvoiceBookId");

                    b.HasIndex("BookId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("TbSalesInvoiceBook", (string)null);
                });

            modelBuilder.Entity("BookStore.Models.TbSupplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<int>("CurrentState")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SupplierId");

                    b.ToTable("TbSuppliers");
                });

            modelBuilder.Entity("BookStore.Models.VwBook", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("AuthorName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CurrentState")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<int?>("DiscountPercent")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfPages")
                        .HasColumnType("int");

                    b.Property<int>("PublishId")
                        .HasColumnType("int");

                    b.Property<string>("PublishYear")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Publisher")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<decimal>("SalesPrice")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.ToTable((string)null);

                    b.ToView("VwBooks", (string)null);
                });

            modelBuilder.Entity("BookStore.Models.VwSalesInvoice", b =>
                {
                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CurrentState")
                        .HasColumnType("int");

                    b.Property<int>("CustomerDeliverId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CutomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DeliveryManId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryManName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("DeliveryPrice")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<string>("DeliveryState")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("GovernorateId")
                        .HasColumnType("int");

                    b.Property<string>("GovernorateName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.ToTable((string)null);

                    b.ToView("VwSalesInvoice", (string)null);
                });

            modelBuilder.Entity("Domains.VwPurchaseInvoice", b =>
                {
                    b.Property<int>("CurrentState")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PurchaseInvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable((string)null);

                    b.ToView("VwPurchaseInvoices", (string)null);
                });

            modelBuilder.Entity("Domains.VwPurchaseInvoiceBook", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentState")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceBookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<decimal>("SalesPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable((string)null);

                    b.ToView("VwPurchaseInvoiceBooks", (string)null);
                });

            modelBuilder.Entity("Domains.VwSalesInvoiceBook", b =>
                {
                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("BookQty")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrentState")
                        .HasColumnType("int");

                    b.Property<int>("CustomerDeliverId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CutomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeliveryManId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryManName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DeliveryPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DeliveryState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<int>("DiscountPercent")
                        .HasColumnType("int");

                    b.Property<int>("GovernorateId")
                        .HasColumnType("int");

                    b.Property<string>("GovernorateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceBookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<decimal>("SalesPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable((string)null);

                    b.ToView("VwSalesInvoiceBooks", (string)null);
                });

            modelBuilder.Entity("BookStore.Models.TbBook", b =>
                {
                    b.HasOne("BookStore.Models.TbAuthor", "Author")
                        .WithMany("TbBooks")
                        .HasForeignKey("AuthorId")
                        .IsRequired()
                        .HasConstraintName("FK_TbBooks_TbAuthor");

                    b.HasOne("BookStore.Models.TbCategory", "Category")
                        .WithMany("TbBooks")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_TbBooks_TbCategories");

                    b.HasOne("BookStore.Models.TbDiscount", "Discount")
                        .WithMany("TbBooks")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStore.Models.TbPublish", "Publish")
                        .WithMany("TbBooks")
                        .HasForeignKey("PublishId")
                        .IsRequired()
                        .HasConstraintName("FK_TbBooks_TbPublish");

                    b.Navigation("Author");

                    b.Navigation("Category");

                    b.Navigation("Discount");

                    b.Navigation("Publish");
                });

            modelBuilder.Entity("BookStore.Models.TbCustomerDeliverInfo", b =>
                {
                    b.HasOne("BookStore.Models.TbGovernorate", "Governorate")
                        .WithMany("TbCustomerDeliverInfos")
                        .HasForeignKey("GovernorateId")
                        .IsRequired()
                        .HasConstraintName("FK_TbCustomerDeliverInfo_TbGovernorates");

                    b.Navigation("Governorate");
                });

            modelBuilder.Entity("BookStore.Models.TbPurchaseInvoice", b =>
                {
                    b.HasOne("BookStore.Models.TbSupplier", "Supplier")
                        .WithMany("TbPurchaseInvoices")
                        .HasForeignKey("SupplierId")
                        .IsRequired()
                        .HasConstraintName("FK_TbPurchaseInvoice_TbSuppliers");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("BookStore.Models.TbPurchaseInvoiceBook", b =>
                {
                    b.HasOne("BookStore.Models.TbBook", "Book")
                        .WithMany("TbPurchaseInvoiceBooks")
                        .HasForeignKey("BookId")
                        .IsRequired()
                        .HasConstraintName("FK_TbPurchaseInvoiceBook_TbBooks");

                    b.HasOne("BookStore.Models.TbPurchaseInvoice", "Invoice")
                        .WithMany("TbPurchaseInvoiceBooks")
                        .HasForeignKey("InvoiceId")
                        .IsRequired()
                        .HasConstraintName("FK_TbPurchaseInvoiceBook_TbPurchaseInvoice");

                    b.Navigation("Book");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("BookStore.Models.TbSalesInvoice", b =>
                {
                    b.HasOne("BookStore.Models.TbCustomerDeliverInfo", "CustomerDeliver")
                        .WithMany("TbSalesInvoices")
                        .HasForeignKey("CustomerDeliverId")
                        .IsRequired()
                        .HasConstraintName("FK_TbSalesInvoice_TbCustomerDeliverInfo");

                    b.HasOne("BookStore.Models.TbDeliveryMan", "DeliveryMan")
                        .WithMany("TbSalesInvoices")
                        .HasForeignKey("DeliveryManId")
                        .IsRequired()
                        .HasConstraintName("FK_TbSalesInvoice_TbDeliveryMan");

                    b.Navigation("CustomerDeliver");

                    b.Navigation("DeliveryMan");
                });

            modelBuilder.Entity("BookStore.Models.TbSalesInvoiceBook", b =>
                {
                    b.HasOne("BookStore.Models.TbBook", "Book")
                        .WithMany("TbSalesInvoiceBooks")
                        .HasForeignKey("BookId")
                        .IsRequired()
                        .HasConstraintName("FK_TbSalesInvoiceBook_TbBooks");

                    b.HasOne("BookStore.Models.TbSalesInvoice", "Invoice")
                        .WithMany("TbSalesInvoiceBooks")
                        .HasForeignKey("InvoiceId")
                        .IsRequired()
                        .HasConstraintName("FK_TbSalesInvoiceBook_TbSalesInvoice");

                    b.Navigation("Book");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("BookStore.Models.TbAuthor", b =>
                {
                    b.Navigation("TbBooks");
                });

            modelBuilder.Entity("BookStore.Models.TbBook", b =>
                {
                    b.Navigation("TbPurchaseInvoiceBooks");

                    b.Navigation("TbSalesInvoiceBooks");
                });

            modelBuilder.Entity("BookStore.Models.TbCategory", b =>
                {
                    b.Navigation("TbBooks");
                });

            modelBuilder.Entity("BookStore.Models.TbCustomerDeliverInfo", b =>
                {
                    b.Navigation("TbSalesInvoices");
                });

            modelBuilder.Entity("BookStore.Models.TbDeliveryMan", b =>
                {
                    b.Navigation("TbSalesInvoices");
                });

            modelBuilder.Entity("BookStore.Models.TbDiscount", b =>
                {
                    b.Navigation("TbBooks");
                });

            modelBuilder.Entity("BookStore.Models.TbGovernorate", b =>
                {
                    b.Navigation("TbCustomerDeliverInfos");
                });

            modelBuilder.Entity("BookStore.Models.TbPublish", b =>
                {
                    b.Navigation("TbBooks");
                });

            modelBuilder.Entity("BookStore.Models.TbPurchaseInvoice", b =>
                {
                    b.Navigation("TbPurchaseInvoiceBooks");
                });

            modelBuilder.Entity("BookStore.Models.TbSalesInvoice", b =>
                {
                    b.Navigation("TbSalesInvoiceBooks");
                });

            modelBuilder.Entity("BookStore.Models.TbSupplier", b =>
                {
                    b.Navigation("TbPurchaseInvoices");
                });
#pragma warning restore 612, 618
        }
    }
}
